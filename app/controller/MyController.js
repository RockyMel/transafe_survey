/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.MyController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            venueLblSurvey: 'label#venueLblSurvey',
            greetingLabel: 'label#greetingLabel',
            signInBtn: 'button#signInBtn',
            signUpBtn: 'button#signUpBtn',
            signOutBtn: 'button#signOutBtn',
            logoPanel: 'panel#logoPanel',
            statLocationLabel: 'label#statLocationLabel',
            StatisticsTabPanel: 'panel#StatisticsTabPanel',
            votedLabel: 'label#voted'
        },

        control: {
            "list": {
                itemtap: 'onListItemTap'
            },
            "#StatisticsTabPanel": {
                activate: 'onStatisticsTabPanelActivate'
            }
        }
    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        console.log(record.get('name'));
        Ext.Viewport.setActiveItem('EmometerPanel',{
            type: "slide",
            direction: "left"
        });
        console.log(this.getVenueLblSurvey().setHtml('You are at ' + record.get('name')));
        localStorage.setItem('location',record.get('name'));
    },

    onStatisticsTabPanelActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
        this.getStatLocationLabel().setHtml(localStorage.getItem('location'));
        this.getVotedLabel().setHtml('For the location below, you have recently voted ' + recentVoteString);
        // Getting statistics

        $.ajax({
            type: "GET",
            url: "http://115.146.86.216:8080/TransNet/rest/getjson/SumTypeOfFeelingAnonymous?location="+localStorage.getItem('location'),
            dataType: "jsonp",
            success: function (xml) {
                //             alert(xml.Data[0].City);
                //             result = xml.Code;
                //             document.myform.result1.value = result;
               // alert(xml.Sad[0]);
                console.log(xml);

                // Happy - Sad
                var store = Ext.getStore("FeelingsStore");
                store.removeAll(false);
                store.sync();
                var data = [


                    {
                        "HappySadText": "1 Happy: " + xml.Happy[1],
                        "HappySadValue": xml.Happy[1]
                    },
                    {
                        "HappySadText": "2 Happy: " + xml.Happy[2],
                        "HappySadValue": xml.Happy[2]
                    },
                    {
                        "HappySadText": "3 Happy: " + xml.Happy[3],
                        "HappySadValue": xml.Happy[3]
                    },
                    {
                        "HappySadText": "4 Happy: " + xml.Happy[4],
                        "HappySadValue": xml.Happy[4]
                    },
                    {
                        "HappySadText": "5 Happy" + xml.Happy[5],
                        "HappySadValue": xml.Happy[5]
                    },
                    {
                        "HappySadText": "Neutral: " + xml.Happy[0],
                        "HappySadValue": xml.Happy[0]
                    },
                    {
                        "HappySadText": "1 Sad: " + xml.Sad[1],
                        "HappySadValue": xml.Sad[1]
                    },
                    {
                        "HappySadText": "2 Sad: " + xml.Sad[2],
                        "HappySadValue": xml.Sad[2]
                    },
                    {
                        "HappySadText": "3 Sad: " + xml.Sad[3],
                        "HappySadValue": xml.Sad[3]
                    },
                    {
                        "HappySadText": "4 Sad: " + xml.Sad[4],
                        "HappySadValue": xml.Sad[4]
                    },
                    {
                        "HappySadText": "5 Sad: " + xml.Sad[5],
                        "HappySadValue": xml.Sad[5]
                    }
                ];
                store.add(data);
                store.sync();

                    // Bored - Excited
                data = [
                    {
                        "BoredExcitedText": "1 Excited : " + xml.Excited [1],
                        "BoredExcitedValue": xml.Excited [1]
                    },
                    {
                        "BoredExcitedText": "2 Excited : " + xml.Excited [2],
                        "BoredExcitedValue": xml.Excited [2]
                    },
                    {
                        "BoredExcitedText": "3 Excited : " + xml.Excited [3],
                        "BoredExcitedValue": xml.Excited [3]
                    },
                    {
                        "BoredExcitedText": "4 Excited : " + xml.Excited [4],
                        "BoredExcitedValue": xml.Excited [4]
                    },
                    {
                        "BoredExcitedText": "5 Excited " + xml.Excited [5],
                        "BoredExcitedValue": xml.Excited [5]
                    },
                    {
                        "BoredExcitedText": "Neutral: " + xml.Excited[0],
                        "BoredExcitedValue": xml.Excited[0]
                    },
                    {
                        "BoredExcitedText": "1 Bored: " + xml.Bored[1],
                        "BoredExcitedValue": xml.Bored[1]
                    },
                    {
                        "BoredExcitedText": "2 Bored: " + xml.Bored[2],
                        "BoredExcitedValue": xml.Bored[2]
                    },
                    {
                        "BoredExcitedText": "3 Bored: " + xml.Bored[3],
                        "BoredExcitedValue": xml.Bored[3]
                    },
                    {
                        "BoredExcitedText": "4 Bored: " + xml.Bored[4],
                        "BoredExcitedValue": xml.Bored[4]
                    },
                    {
                        "BoredExcitedText": "5 Bored: " + xml.Bored[5],
                        "BoredExcitedValue": xml.Bored[5]
                    }
                ];
                store.add(data);
                store.sync();



                // Scared - Safe

                data = [

                    {
                        "ScaredSafeText": "1 Safe: " + xml.Safe[1],
                        "ScaredSafeValue": xml.Safe[1]
                    },
                    {
                        "ScaredSafeText": "2 Safe: " + xml.Safe[2],
                        "ScaredSafeValue": xml.Safe[2]
                    },
                    {
                        "ScaredSafeText": "3 Safe: " + xml.Safe[3],
                        "ScaredSafeValue": xml.Safe[3]
                    },
                    {
                        "ScaredSafeText": "4 Safe: " + xml.Safe[4],
                        "ScaredSafeValue": xml.Safe[4]
                    },
                    {
                        "ScaredSafeText": "5 Safe" + xml.Safe[5],
                        "ScaredSafeValue": xml.Safe[5]
                    },
                    {
                        "ScaredSafeText": "Neutral: " + xml.Safe[0],
                        "ScaredSafeValue": xml.Safe[0]
                    },
                    {
                        "ScaredSafeText": "1 Scared: " + xml.Scared[1],
                        "ScaredSafeValue": xml.Scared[1]
                    },
                    {
                        "ScaredSafeText": "2 Scared: " + xml.Scared[2],
                        "ScaredSafeValue": xml.Scared[2]
                    },
                    {
                        "ScaredSafeText": "3 Scared: " + xml.Scared[3],
                        "ScaredSafeValue": xml.Scared[3]
                    },
                    {
                        "ScaredSafeText": "4 Scared: " + xml.Scared[4],
                        "ScaredSafeValue": xml.Scared[4]
                    },
                    {
                        "ScaredSafeText": "5 Scared: " + xml.Scared[5],
                        "ScaredSafeValue": xml.Scared[5]
                    }
                ];
                store.add(data);
                store.sync();

                 // Angry - Peaceful

                data = [

                    {
                        "AngryPeacefulText": "1 Peaceful: " + xml.Peaceful[1],
                        "AngryPeacefulValue": xml.Peaceful[1]
                    },
                    {
                        "AngryPeacefulText": "2 Peaceful: " + xml.Peaceful[2],
                        "AngryPeacefulValue": xml.Peaceful[2]
                    },
                    {
                        "AngryPeacefulText": "3 Peaceful: " + xml.Peaceful[3],
                        "AngryPeacefulValue": xml.Peaceful[3]
                    },
                    {
                        "AngryPeacefulText": "4 Peaceful: " + xml.Peaceful[4],
                        "AngryPeacefulValue": xml.Peaceful[4]
                    },
                    {
                        "AngryPeacefulText": "5 Peaceful" + xml.Peaceful[5],
                        "AngryPeacefulValue": xml.Peaceful[5]
                    },
                    {
                        "AngryPeacefulText": "Neutral: " + xml.Peaceful[0],
                        "AngryPeacefulValue": xml.Peaceful[0]
                    },
                    {
                        "AngryPeacefulText": "1 Angry: " + xml.Angry[1],
                        "AngryPeacefulValue": xml.Angry[1]
                    },
                    {
                        "AngryPeacefulText": "2 Angry: " + xml.Angry[2],
                        "AngryPeacefulValue": xml.Angry[2]
                    },
                    {
                        "AngryPeacefulText": "3 Angry: " + xml.Angry[3],
                        "AngryPeacefulValue": xml.Angry[3]
                    },
                    {
                        "AngryPeacefulText": "4 Angry: " + xml.Angry[4],
                        "AngryPeacefulValue": xml.Angry[4]
                    },
                    {
                        "AngryPeacefulText": "5 Angry: " + xml.Angry[5],
                        "AngryPeacefulValue": xml.Angry[5]
                    }
                ];
                store.add(data);
                store.sync();

            }
        });
    }

});